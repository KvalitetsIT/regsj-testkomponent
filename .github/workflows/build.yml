name: CICD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
# Set docker image names.
    - name: Setup env variables
      run: |
        echo "DOCKER_SERVICE=regsj/regsj-testkomponent" >> $GITHUB_ENV
        echo "DOCKER_HARBOR_SERVICE=dockerregistry.regsj.hosting.kitkube.dk/regsj/regsj-testkomponent" >> $GITHUB_ENV
        echo "DOCKER_DOCUMENTATION=regsj/regsj-testkomponent-documentation" >> $GITHUB_ENV
        echo "DOCKER_HARBOR_DOCUMENTATION=dockerregistry.regsj.hosting.kitkube.dk/regsj/regsj-testkomponent-documentation" >> $GITHUB_ENV

# Checkout source code
    - uses: actions/checkout@v2

# Cache maven stuff
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

# if below step is skipped this build is a tag build. Can be used for skipping other steps.
    - name: Is Tag Build
      id: tag
      if:  ${{ startsWith(github.ref, 'refs/tags/v') }}
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

# Login to docker hub using secrets in GitHub.
    - name: Login to docker
      uses: docker/login-action@v1
      with:
        registry: dockerregistry.regsj.hosting.kitkube.dk
        username: ${{ secrets.HARBOR_USER }}
        password: ${{ secrets.HARBOR_PASSWORD }}

    - name: Build and test
      run: ./build/build.sh

    - name: Generate Jacoco Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v1.0.0
      with:
        jacoco-csv-file: testreport/target/site/jacoco-aggregate/jacoco.csv

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"

    - name: Update coverage badge
      if: ${{ steps.tag.conclusion == 'skipped' }}
      run: ./build/badge-update.sh

    - name: Upload Jacoco coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: testreport/target/site/jacoco-aggregate/

    - name: Tag service dev docker image
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_HARBOR_SERVICE }}:dev

    - name: Push service dev docker image
      run: ./build/docker-push.sh ${{ env.DOCKER_HARBOR_SERVICE }}:dev

    - name: Tag service git id docker image
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_HARBOR_SERVICE }}:${{ github.sha }}

    - name: Push service git id docker image.
      run: ./build/docker-push.sh ${{ env.DOCKER_HARBOR_SERVICE }}:${{ github.sha }}

    - name: Tag documentation dev docker image
      run: ./build/docker-tag.sh ${{ env.DOCKER_DOCUMENTATION }}:latest ${{ env.DOCKER_HARBOR_DOCUMENTATION }}:dev

    - name: Push documentation dev docker image
      run: ./build/docker-push.sh ${{ env.DOCKER_HARBOR_DOCUMENTATION }}:dev

    - name: Tag documentation git id docker image
      run: ./build/docker-tag.sh ${{ env.DOCKER_DOCUMENTATION }}:latest ${{ env.DOCKER_HARBOR_DOCUMENTATION }}:${{ github.sha }}

    - name: Push documentation git id docker image.
      run: ./build/docker-push.sh ${{ env.DOCKER_HARBOR_DOCUMENTATION }}:${{ github.sha }}

    - name: Tag latest service docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_HARBOR_SERVICE }}:latest

    - name: Push latest service docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-push.sh ${{ env.DOCKER_HARBOR_SERVICE }}:latest

    - name: Tag version service docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-tag.sh ${{ env.DOCKER_SERVICE }}:latest ${{ env.DOCKER_HARBOR_SERVICE }}:${{ steps.tag.outputs.VERSION }}

    - name: Push version service docker image.
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-push.sh ${{ env.DOCKER_HARBOR_SERVICE }}:${{ steps.tag.outputs.VERSION }}

    - name: Tag latest documentation docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-tag.sh ${{ env.DOCKER_DOCUMENTATION }}:latest ${{ env.DOCKER_HARBOR_DOCUMENTATION }}:latest

    - name: Push latest documentation docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-push.sh ${{ env.DOCKER_HARBOR_DOCUMENTATION }}:latest

    - name: Tag version documentation docker image
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-tag.sh ${{ env.DOCKER_DOCUMENTATION }}:latest ${{ env.DOCKER_HARBOR_DOCUMENTATION }}:${{ steps.tag.outputs.VERSION }}

    - name: Push version documentation docker image.
      if: ${{ steps.tag.conclusion != 'skipped' }}
      run: ./build/docker-push.sh ${{ env.DOCKER_HARBOR_DOCUMENTATION }}:${{ steps.tag.outputs.VERSION }}
